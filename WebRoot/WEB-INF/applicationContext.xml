<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
     
    <bean class="com.jupai.util.MyApplicationContextUtil"></bean>
    <!-- in-memory database and a datasource  -->
    <bean id="myDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/jupai?characterEncoding=utf8"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <property name="IdleConnectionTestPeriodInMinutes" value="10"/>
        <property name="idleMaxAgeInMinutes" value="5"/>
        <property name="maxConnectionsPerPartition" value="5"/>
        <property name="minConnectionsPerPartition" value="1"/>
        <property name="partitionCount" value="3"/>
        <property name="acquireIncrement" value="5"/>
        <property name="statementsCacheSize" value="100"/>
        <property name="releaseHelperThreads" value="3"/>
        <property name="logStatementsEnabled"  value="true"/>
        <property name="connectionTimeoutInMs"  value="30000"/>
    </bean>
    
    <!-- enable autowire 开启注解配置-->
    <context:annotation-config />
    
    <!-- enable transaction demarcation with annotations 开启事务注解驱动 -->
    <tx:annotation-driven />
    
    <!-- 开启AOP配置 -->
	<aop:aspectj-autoproxy />
    
    <!--  enable component scanning (beware that this does not enable mapper scanning!) 扫描service-->
    <context:component-scan base-package="com.jupai.account.service"/>
    <context:component-scan base-package="com.jupai.weixin.service"/>
    <context:component-scan base-package="com.jupai.mobile.service"/>
    <context:component-scan base-package="com.jupai.pay.service"/>
    
    <!-- transaction manager, use JtaTransactionManager for global tx  事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="myDataSource" />
    </bean>
    <!--  创建SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="myDataSource" />
        <property name="typeAliasesPackage" value="com.jupai.account.domain, com.jupai.weixin.domain, com.jupai.mobile.domain, com.jupai.pay.domain" />
    </bean>
    
    <!-- 自动扫描映射器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.jupai.account.persistence"/>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.jupai.mobile.persistence"/>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.jupai.weixin.persistence"/>
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer" p:basePackage="com.jupai.pay.persistence"/>
	
</beans>
